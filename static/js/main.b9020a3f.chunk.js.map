{"version":3,"sources":["hooks/use-styles.js","components/app-loading-indicator.jsx","constants/action-types.js","action-creators/logout.js","action-creators/set-dialog-open.js","constants/commons.js","components/header.jsx","components/error-alert.jsx","action-creators/remove-error.js","components/alert-list.jsx","action-creators/fetch-tasks.js","components/main-toolbar.jsx","action-creators/set-dialog-field-value.js","components/task-card.jsx","components/task-list.jsx","components/task-pagination.jsx","action-creators/reset-dialog-state.js","action-creators/set-dialog-field-error.js","action-creators/reset-dialog-general-error.js","action-creators/reset-dialog-field-error.js","hooks/use-dialog.js","components/busiable-button.jsx","action-creators/create-task.js","action-creators/edit-task.js","components/task-manage-dialog.jsx","action-creators/login.js","components/login-dialog.jsx","action-creators/read-authorization-data.js","app.jsx","reducers/tasks.js","reducers/errors.js","reducers/task-list-state.js","reducers/dialog-state.js","reducers/authorization-state.js","reducers/index.js","action-creators/add-error.js","action-creators/set-task-list-state.js","action-creators/set-tasks.js","sagas/fetch-tasks.js","action-creators/set-dialog-busy.js","action-creators/set-dialog-general-error.js","sagas/create-task.js","sagas/login.js","sagas/logout.js","action-creators/set-authorization-state.js","sagas/read-authorization-data.js","sagas/edit-task.js","sagas/index.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","gridAndWrapper","paddingLeft","spacing","paddingRight","alertList","paddingTop","taskPagination","paddingBottom","appLoadingIndicator","zIndex","drawer","color","buttonLoadingIndicator","position","top","left","marginTop","marginLeft","AppLoadingIndicator","classes","Backdrop","open","className","CircularProgress","FETCH_TASKS","SET_TASKS","CREATE_TASK","EDIT_TASK","ADD_ERROR","REMOVE_ERROR","SET_TASK_LIST_STATE","SET_AUTHORIZATION_STATE","SET_DIALOG_OPEN","SET_DIALOG_BUSY","SET_DIALOG_FIELD_VALUE","SET_DIALOG_FIELD_ERROR","RESET_DIALOG_FIELD_ERROR","SET_DIALOG_GENERAL_ERROR","RESET_DIALOG_GENERAL_ERROR","RESET_DIALOG_STATE","LOGIN","LOGOUT","READ_AUTHORIZATION_DATA","logout","type","setDialogOpen","dialogName","isOpen","payload","BACKEND_URL","DEVELOPER_NAME","BACKEND_STATUS","TASK_SORTING_FIELD","TASK_SORTING_DIRECTION","FIELD_EMPTY_ERROR","TASK_STATUS_MASK","DIALOG_NAME","AUTHORIZATION_COOKIE_NAME","Header","isAuthorized","useSelector","state","authorizationState","buttonLabel","dispatch","useDispatch","logoutOrOpenLoginDialog","useCallback","AppBar","Toolbar","Typography","variant","style","flexGrow","Button","onClick","ErrorAlert","error","id","text","onClose","Alert","severity","closeText","AlertTitle","removeError","errorId","AlertList","closeErrorAlert","errors","length","Grid","container","direction","map","item","fetchTasks","params","isInitialDataLoading","TASK_SORTING_MODES","field","label","MainToolbar","sortingField","taskListState","sortingDirection","isSortingDirectionButtonShown","isSortingDirectionAsc","sortingDirectionLabel","openCreateTaskDialog","changeSortingField","value","target","toggleSortingDirection","justify","alignItems","wrap","zeroMinWidth","Select","maxWidth","onChange","sortingMode","MenuItem","Tooltip","title","IconButton","setDialogFieldValue","fieldValue","TaskCard","username","email","isEdited","isDone","openEditTaskDialog","oldText","Card","Box","right","fontSize","CardContent","component","paragraph","noWrap","CardActions","size","TaskList","tasks","task","xs","md","align","TaskPagination","pagesTotal","currentPage","Pagination","shape","count","page","event","resetDialogState","setDialogFieldError","fieldError","resetDialogGeneralError","resetDialogFieldError","fieldName","useDialog","validate","dialogState","isBusy","generalError","close","resetState","changeField","name","validateField","BusiableButton","busy","children","disabled","rest","buttonDisabled","createTask","editTask","TaskManageDialog","undefined","test","isEditing","dialogTitleText","submitButtonLabel","usernameFieldValue","emailFieldValue","textFieldValue","usernameFieldError","emailFieldError","textFieldError","isUsernameFieldInvalid","isEmailFieldInvalid","isTextFieldInvalid","isFormInvalid","isUneditableFieldDisabled","changeIsDone","checked","submitData","preventDefault","fieldsError","Dialog","onExited","DialogTitle","noValidate","onSubmit","DialogContent","TextField","required","fullWidth","margin","helperText","onBlur","multiline","rows","FormControlLabel","control","Checkbox","DialogActions","login","LoginDialog","password","passwordFieldValue","passwordFieldError","isPasswordFieldInvalid","readAuthorizationData","App","isInitialDataLoaded","useEffect","defaultState","tasksReducer","errorsReducer","Date","now","toString","Math","random","substr","filter","taskListStateReducer","dialogStateReducer","authorizationStateReducer","rootReducer","combineReducers","addError","setTaskListState","setTasks","fetchTasksSaga","select","requestParams","currentPageParam","sortingFieldParam","sortingDirectionParam","call","axios","get","data","message","requestStatus","status","put","ceil","total_task_count","taskStatus","binaryStatus","parseInt","takeEvery","setDialogBusy","setDialogGeneralError","createTaskSaga","formData","FormData","append","post","loginSaga","tokenExpires","getTime","Cookies","set","token","expires","sameSite","logoutSaga","remove","setAuthorizationState","readAuthorizationDataSaga","getTimeout","dateString","timeout","delay","takeLatest","editTaskSaga","responseStatus","tokenError","rootSaga","all","composeEnhancers","composeWithDevTools","trace","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b9020a3f.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  gridAndWrapper: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  alertList: {\n    paddingTop: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  taskPagination: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  appLoadingIndicator: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  buttonLoadingIndicator: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -10,\n    marginLeft: -10,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nconst AppLoadingIndicator = () => {\n  const classes = useStyles();\n\n  return (\n    <Backdrop open className={classes.appLoadingIndicator}>\n      <CircularProgress color=\"inherit\"/>\n    </Backdrop>\n  );\n};\n\nexport default AppLoadingIndicator;\n","export const FETCH_TASKS = 'FETCH_TASKS';\nexport const SET_TASKS = 'SET_TASKS';\n\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const EDIT_TASK = 'EDIT_TASK';\n\nexport const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n\nexport const SET_TASK_LIST_STATE = 'SET_TASK_LIST_STATE';\n\nexport const SET_AUTHORIZATION_STATE = 'SET_AUTHORIZATION_STATE';\n\nexport const SET_DIALOG_OPEN = 'SET_DIALOG_OPEN';\nexport const SET_DIALOG_BUSY = 'SET_DIALOG_BUSY';\n\nexport const SET_DIALOG_FIELD_VALUE = 'SET_DIALOG_FIELD_VALUE';\n\nexport const SET_DIALOG_FIELD_ERROR = 'SET_DIALOG_FIELD_ERROR';\nexport const RESET_DIALOG_FIELD_ERROR = 'RESET_DIALOG_FIELD_ERROR';\n\nexport const SET_DIALOG_GENERAL_ERROR = 'SET_DIALOG_GENERAL_ERROR';\nexport const RESET_DIALOG_GENERAL_ERROR = 'RESET_DIALOG_GENERAL_ERROR';\n\nexport const RESET_DIALOG_STATE = 'RESET_DIALOG_STATE';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport const READ_AUTHORIZATION_DATA = 'READ_AUTHORIZATION_DATA';\n","import { LOGOUT } from '../constants/action-types';\n\nconst logout = () => ({\n  type: LOGOUT,\n});\n\nexport default logout;\n","import { SET_DIALOG_OPEN } from '../constants/action-types';\n\nconst setDialogOpen = (dialogName, isOpen) => ({\n  type: SET_DIALOG_OPEN,\n  dialogName,\n  payload: isOpen,\n});\n\nexport default setDialogOpen;\n","export const BACKEND_URL = 'https://uxcandy.com/~shapoval/test-task-backend/v2/';\nexport const DEVELOPER_NAME = 'dskrasnov';\n\nexport const BACKEND_STATUS = {\n  OK: 'ok',\n  ERROR: 'error',\n};\n\nexport const TASKS_PER_PAGE = 3;\n\nexport const TASK_SORTING_FIELD = {\n  NO_SORTING: 'NO_SORTING',\n  ID: 'id',\n  USERNAME: 'username',\n  EMAIL: 'email',\n  STATUS: 'status',\n};\n\nexport const TASK_SORTING_DIRECTION = {\n  ASC: 'asc',\n  DESC: 'desc',\n};\n\nexport const FIELD_EMPTY_ERROR = 'Поле не может быть пустым';\n\nexport const TASK_STATUS_MASK = {\n  EDITED: 0b01,\n  DONE: 0b10,\n};\n\nexport const DIALOG_NAME = {\n  TASK_MANAGE: 'taskManage',\n  LOGIN: 'login',\n};\n\nexport const AUTHORIZATION_COOKIE_NAME = {\n  TOKEN: 'token',\n  TOKEN_EXPIRES: 'tokenExpires',\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\n\nimport logout from '../action-creators/logout';\nimport setDialogOpen from '../action-creators/set-dialog-open';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst Header = () => {\n  const isAuthorized = useSelector(state => state.authorizationState.isAuthorized);\n\n  const buttonLabel = isAuthorized ? 'Выйти' : 'Войти';\n\n  const dispatch = useDispatch();\n\n  const logoutOrOpenLoginDialog = useCallback(\n    () => {\n      if (isAuthorized) {\n        dispatch(logout());\n\n        return;\n      }\n\n      dispatch(setDialogOpen(DIALOG_NAME.LOGIN, true));\n    },\n    [isAuthorized, dispatch],\n  );\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">Задачи</Typography>\n        <div style={{ flexGrow: 1 }}/>\n        <Button color=\"inherit\" onClick={logoutOrOpenLoginDialog}>{buttonLabel}</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst ErrorAlert = ({ error: { id, text }, onClose }) => {\n  const closeHandler = () => onClose(id);\n\n  return (\n    <Alert\n      severity=\"error\"\n      variant=\"filled\"\n      closeText=\"Закрыть\"\n      // eslint-disable-next-line react/jsx-no-bind\n      onClose={closeHandler}\n    >\n      <AlertTitle>Ошибка</AlertTitle>\n      {text}\n    </Alert>\n  );\n};\n\nErrorAlert.propTypes = {\n  error: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  onClose: PropTypes.func,\n};\n\nexport default ErrorAlert;\n","import { REMOVE_ERROR } from '../constants/action-types';\n\nconst removeError = errorId => ({\n  type: REMOVE_ERROR,\n  payload: errorId,\n});\n\nexport default removeError;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nimport ErrorAlert from './error-alert';\n\nimport removeError from '../action-creators/remove-error';\n\nconst AlertList = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const closeErrorAlert = useCallback(id => dispatch(removeError(id)), [dispatch]);\n\n  const errors = useSelector(state => state.errors);\n  if (!errors.length) return null;\n\n  return (\n    <div className={classes.alertList}>\n      <Grid container direction=\"column\" spacing={1} className={classes.gridAndWrapper}>\n        {\n          errors.map(error => (\n            <Grid key={error.id} item>\n              <ErrorAlert error={error} onClose={closeErrorAlert}/>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </div>\n  );\n};\n\nexport default AlertList;\n","import { FETCH_TASKS } from '../constants/action-types';\n\nconst fetchTasks = (params = {}, isInitialDataLoading) => ({\n  type: FETCH_TASKS,\n  params,\n  isInitialDataLoading,\n});\n\nexport default fetchTasks;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button, Grid, IconButton, MenuItem, Select, Toolbar, Tooltip } from '@material-ui/core';\n\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\n\nimport {\n  DIALOG_NAME,\n  TASK_SORTING_DIRECTION,\n  TASK_SORTING_FIELD,\n} from '../constants/commons';\n\nconst TASK_SORTING_MODES = [\n  { field: TASK_SORTING_FIELD.NO_SORTING, label: 'Без сортировки' },\n  { field: TASK_SORTING_FIELD.ID, label: 'По идентификатору' },\n  { field: TASK_SORTING_FIELD.USERNAME, label: 'По имени пользователя' },\n  { field: TASK_SORTING_FIELD.EMAIL, label: 'По адресу электронной почты' },\n  { field: TASK_SORTING_FIELD.STATUS, label: 'По статусу' },\n];\n\nconst MainToolbar = () => {\n  const sortingField = useSelector(state => state.taskListState.sortingField);\n  const sortingDirection = useSelector(state => state.taskListState.sortingDirection);\n\n  const isSortingDirectionButtonShown = sortingField !== TASK_SORTING_FIELD.NO_SORTING;\n  const isSortingDirectionAsc = sortingDirection === TASK_SORTING_DIRECTION.ASC;\n\n  const sortingDirectionLabel = isSortingDirectionAsc ? 'По возрастанию' : 'По убыванию';\n\n  const dispatch = useDispatch();\n\n  const openCreateTaskDialog = useCallback(\n    () => dispatch(setDialogOpen(DIALOG_NAME.TASK_MANAGE, true)),\n    [dispatch],\n  );\n\n  const changeSortingField = useCallback(\n    ({ target: { value } }) => dispatch(fetchTasks(\n      { sortingField: value },\n    )),\n    [dispatch],\n  );\n\n  const toggleSortingDirection = useCallback(\n    () => dispatch(fetchTasks({\n      sortingDirection: isSortingDirectionAsc\n        ? TASK_SORTING_DIRECTION.DESC\n        : TASK_SORTING_DIRECTION.ASC,\n    })),\n    [dispatch, isSortingDirectionAsc],\n  );\n\n  return (\n    <Toolbar>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={openCreateTaskDialog}\n          >\n            Создать\n          </Button>\n        </Grid>\n\n        <Grid\n          item\n          zeroMinWidth\n          container\n          justify=\"flex-end\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n        >\n          <Grid item zeroMinWidth>\n            <Select\n              value={sortingField}\n              style={{ maxWidth: '100%' }}\n              onChange={changeSortingField}\n            >\n              {\n                TASK_SORTING_MODES.map(sortingMode => (\n                  <MenuItem\n                    key={sortingMode.field}\n                    value={sortingMode.field}\n                  >\n                    {sortingMode.label}\n                  </MenuItem>\n                ))\n              }\n            </Select>\n          </Grid>\n\n          {\n            isSortingDirectionButtonShown && (\n              <Grid item>\n                <Tooltip title={sortingDirectionLabel}>\n                  <IconButton onClick={toggleSortingDirection}>\n                    {\n                      isSortingDirectionAsc ? (<ArrowDownwardIcon/>) : (<ArrowUpwardIcon/>)\n                    }\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            )\n          }\n        </Grid>\n      </Grid>\n    </Toolbar>\n  );\n};\n\nexport default MainToolbar;\n","import { SET_DIALOG_FIELD_VALUE } from '../constants/action-types';\n\nconst setDialogFieldValue = (dialogName, fieldValue) => ({\n  type: SET_DIALOG_FIELD_VALUE,\n  dialogName,\n  payload: fieldValue,\n});\n\nexport default setDialogFieldValue;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckBox from '@material-ui/icons/CheckBox';\n\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst TaskCard = ({ id, username, email, text, isEdited, isDone }) => {\n  const isAuthorized = useSelector(state => state.authorizationState.isAuthorized);\n\n  const dispatch = useDispatch();\n\n  const openEditTaskDialog = useCallback(\n    () => {\n      dispatch(setDialogFieldValue(DIALOG_NAME.TASK_MANAGE, {\n        id,\n        username,\n        email,\n        text,\n        oldText: text,\n        isEdited,\n        isDone,\n      }));\n\n      dispatch(setDialogOpen(DIALOG_NAME.TASK_MANAGE, true));\n    },\n    [dispatch, id, username, email, text, isEdited, isDone],\n  );\n\n  return (\n    <Card style={{ position: 'relative' }}>\n      {\n        (isEdited || isDone) && (\n          <Box style={{ position: 'absolute', top: 2, right: 2 }}>\n            {\n              isEdited && (\n                <Tooltip title=\"Отредактирована\">\n                  <EditIcon fontSize=\"small\"/>\n                </Tooltip>\n              )\n            }\n\n            {\n              isDone && (\n                <Tooltip title=\"Выполнена\">\n                  <CheckBox fontSize=\"small\"/>\n                </Tooltip>\n              )\n            }\n          </Box>\n        )\n      }\n\n      <CardContent>\n        <Typography component=\"span\">\n          <b>Пользователь:</b>\n        </Typography>\n        <Typography paragraph noWrap>\n          {username}\n        </Typography>\n\n        <Typography component=\"span\">\n          <b>Электронная почта:</b>\n        </Typography>\n        <Typography paragraph noWrap>\n          {email}\n        </Typography>\n\n        <Typography component=\"span\">\n          <b>Текст задачи:</b>\n        </Typography>\n        <Typography paragraph>\n          {text}\n        </Typography>\n      </CardContent>\n\n      {\n        isAuthorized && (\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={openEditTaskDialog}>\n              Редактировать\n            </Button>\n          </CardActions>\n        )\n      }\n    </Card>\n  );\n};\n\nTaskCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  isEdited: PropTypes.bool.isRequired,\n  isDone: PropTypes.bool.isRequired,\n};\n\nexport default TaskCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nimport TaskCard from './task-card';\n\nimport { TASKS_PER_PAGE } from '../constants/commons';\n\nconst MD_GRID_SIZE = 12 / TASKS_PER_PAGE;\n\nconst TaskList = () => {\n  const classes = useStyles();\n\n  const tasks = useSelector(state => state.tasks);\n\n  return (\n    <div className={classes.gridAndWrapper}>\n      <Grid container spacing={2} className={classes.gridAndWrapper}>\n        {\n          tasks.length\n            ? tasks.map(task => (\n              <Grid key={task.id} item xs={12} md={MD_GRID_SIZE}>\n                <TaskCard\n                  id={task.id}\n                  username={task.username}\n                  email={task.email}\n                  text={task.text}\n                  isEdited={task.isEdited}\n                  isDone={task.isDone}\n                />\n              </Grid>\n            ))\n            : (\n              <Grid item xs={12}>\n                <Typography align=\"center\">Список задач пуст.</Typography>\n              </Grid>\n            )\n        }\n      </Grid>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport useStyles from '../hooks/use-styles';\n\nimport fetchTasks from '../action-creators/fetch-tasks';\n\nconst TaskPagination = () => {\n  const classes = useStyles();\n\n  const pagesTotal = useSelector(state => state.taskListState.pagesTotal);\n  const currentPage = useSelector(state => state.taskListState.currentPage);\n\n  const dispatch = useDispatch();\n\n  if (pagesTotal < 2) return null;\n\n  const changePage = (event, value) => {\n    dispatch(fetchTasks({ currentPage: value }));\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justify=\"center\"\n      className={classes.taskPagination}\n    >\n      <Grid item>\n        <Pagination\n          variant=\"outlined\"\n          shape=\"rounded\"\n          count={pagesTotal}\n          page={currentPage}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={changePage}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TaskPagination;\n","import { RESET_DIALOG_STATE } from '../constants/action-types';\n\nconst resetDialogState = dialogName => ({\n  type: RESET_DIALOG_STATE,\n  dialogName,\n});\n\nexport default resetDialogState;\n","import { SET_DIALOG_FIELD_ERROR } from '../constants/action-types';\n\nconst setDialogFieldError = (dialogName, fieldError) => ({\n  type: SET_DIALOG_FIELD_ERROR,\n  dialogName,\n  payload: fieldError,\n});\n\nexport default setDialogFieldError;\n","import { RESET_DIALOG_GENERAL_ERROR } from '../constants/action-types';\n\nconst resetDialogGeneralError = dialogName => ({\n  type: RESET_DIALOG_GENERAL_ERROR,\n  dialogName,\n});\n\nexport default resetDialogGeneralError;\n","import { RESET_DIALOG_FIELD_ERROR } from '../constants/action-types';\n\nconst resetDialogFieldError = (dialogName, fieldName) => ({\n  type: RESET_DIALOG_FIELD_ERROR,\n  dialogName,\n  payload: fieldName,\n});\n\nexport default resetDialogFieldError;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\n\nimport resetDialogState from '../action-creators/reset-dialog-state';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport resetDialogFieldError from '../action-creators/reset-dialog-field-error';\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\n\nconst useDialog = (dialogName, validate) => {\n  const isOpen = useSelector(state => state.dialogState[dialogName].isOpen);\n  const isBusy = useSelector(state => state.dialogState[dialogName].isBusy);\n\n  const generalError = useSelector(state => state.dialogState[dialogName].generalError);\n\n  const dispatch = useDispatch();\n\n  const close = useCallback(\n    () => {\n      if (isBusy) return;\n\n      dispatch(setDialogOpen(dialogName, false));\n    },\n    [isBusy, dispatch, dialogName],\n  );\n\n  const resetState = useCallback(\n    () => dispatch(resetDialogState(dialogName)),\n    [dispatch, dialogName],\n  );\n\n  const changeField = useCallback(\n    ({ target: { name, value } }) => {\n      dispatch(resetDialogGeneralError(dialogName));\n      dispatch(resetDialogFieldError(dialogName, name));\n      dispatch(setDialogFieldValue(dialogName, { [name]: value }));\n    },\n    [dispatch, dialogName],\n  );\n\n  const validateField = useCallback(\n    event => {\n      const fieldError = validate({ [event.target.name]: event.target.value });\n\n      dispatch(setDialogFieldError(dialogName, fieldError));\n    },\n    [dialogName, dispatch, validate],\n  );\n\n  return {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  };\n};\n\nexport default useDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, CircularProgress } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nconst BusiableButton = ({ busy, children, color, disabled, ...rest }) => {\n  const classes = useStyles();\n\n  const buttonDisabled = disabled || busy;\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Button color={color} disabled={buttonDisabled} {...rest}>\n      {children}\n      {\n        busy && (\n          <CircularProgress\n            size={20}\n            color={color}\n            className={classes.buttonLoadingIndicator}\n          />\n        )\n      }\n    </Button>\n  );\n};\n\nBusiableButton.propTypes = {\n  busy: PropTypes.bool,\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n  disabled: PropTypes.bool,\n};\n\nexport default BusiableButton;\n","import { CREATE_TASK } from '../constants/action-types';\n\nconst createTask = () => ({ type: CREATE_TASK });\n\nexport default createTask;\n","import { EDIT_TASK } from '../constants/action-types';\n\nconst editTask = () => ({\n  type: EDIT_TASK,\n});\n\nexport default editTask;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  TextField,\n} from '@material-ui/core';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport useDialog from '../hooks/use-dialog';\n\nimport BusiableButton from './busiable-button';\n\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport resetDialogFieldError from '../action-creators/reset-dialog-field-error';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport createTask from '../action-creators/create-task';\nimport editTask from '../action-creators/edit-task';\n\nimport {\n  DIALOG_NAME,\n  FIELD_EMPTY_ERROR,\n} from '../constants/commons';\n\nconst TaskManageDialog = () => {\n  const validate = useCallback(\n    fieldValue => {\n      const EMAIL_REGEXP = /.+@.+\\..+/;\n\n      return ({\n        ...(fieldValue.username !== undefined\n          && fieldValue.username.length === 0\n          && { username: FIELD_EMPTY_ERROR }),\n\n        ...(fieldValue.text !== undefined\n          && fieldValue.text.length === 0\n          && { text: FIELD_EMPTY_ERROR }),\n\n        ...(fieldValue.email !== undefined\n          && !EMAIL_REGEXP.test(fieldValue.email)\n          && { email: 'Некорректный формат адреса' }),\n\n        ...(fieldValue.email !== undefined\n          && fieldValue.email.length === 0\n          && { email: FIELD_EMPTY_ERROR }),\n      });\n    },\n    [],\n  );\n\n  const {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  } = useDialog(DIALOG_NAME.TASK_MANAGE, validate);\n\n  const taskId = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.id);\n\n  const isEditing = !!taskId;\n\n  const dialogTitleText = isEditing ? 'Редактирование задачи' : 'Создание задачи';\n  const submitButtonLabel = isEditing ? 'Сохранить' : 'Создать';\n\n  const usernameFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.username);\n  const emailFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.email);\n  const textFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.text);\n\n  const isDone = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.isDone);\n\n  const usernameFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.username);\n  const emailFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.email);\n  const textFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.text);\n\n  const isUsernameFieldInvalid = !!usernameFieldError;\n  const isEmailFieldInvalid = !!emailFieldError;\n  const isTextFieldInvalid = !!textFieldError;\n\n  const isFormInvalid = isUsernameFieldInvalid || isEmailFieldInvalid || isTextFieldInvalid;\n\n  const isUneditableFieldDisabled = isBusy || isEditing;\n\n  const dispatch = useDispatch();\n\n  const changeIsDone = useCallback(\n    ({ target: { name, checked } }) => {\n      dispatch(resetDialogGeneralError(DIALOG_NAME.TASK_MANAGE));\n      dispatch(resetDialogFieldError(DIALOG_NAME.TASK_MANAGE, name));\n      dispatch(setDialogFieldValue(DIALOG_NAME.TASK_MANAGE, { [name]: checked }));\n    },\n    [dispatch],\n  );\n\n  const submitData = useCallback(\n    event => {\n      event.preventDefault();\n\n      dispatch(resetDialogGeneralError(DIALOG_NAME.TASK_MANAGE));\n\n      const fieldsError = validate({\n        ...(!isEditing && { username: usernameFieldValue }),\n        ...(!isEditing && { email: emailFieldValue }),\n        text: textFieldValue,\n      });\n\n      dispatch(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, fieldsError));\n\n      if (fieldsError.username || fieldsError.email || fieldsError.text) return;\n\n      const action = isEditing ? editTask : createTask;\n\n      dispatch(action());\n    },\n    [\n      dispatch,\n      validate,\n      isEditing,\n      usernameFieldValue,\n      emailFieldValue,\n      textFieldValue,\n    ],\n  );\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={close}\n      onExited={resetState}\n    >\n      <DialogTitle>{dialogTitleText}</DialogTitle>\n\n      <form noValidate onSubmit={submitData}>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Пользователь\"\n            name=\"username\"\n            value={usernameFieldValue}\n            error={isUsernameFieldInvalid}\n            helperText={usernameFieldError}\n            disabled={isUneditableFieldDisabled}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Электронная почта\"\n            name=\"email\"\n            value={emailFieldValue}\n            error={isEmailFieldInvalid}\n            helperText={emailFieldError}\n            disabled={isUneditableFieldDisabled}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            multiline\n            rows={4}\n            margin=\"normal\"\n            label=\"Текст задачи\"\n            name=\"text\"\n            value={textFieldValue}\n            error={isTextFieldInvalid}\n            helperText={textFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          {\n            isEditing && (\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    name=\"isDone\"\n                    checked={isDone}\n                    onChange={changeIsDone}\n                  />\n                )}\n                label=\"Задача выполнена\"\n              />\n            )\n          }\n\n          {\n            generalError && (\n              <Alert\n                severity=\"error\"\n                variant=\"filled\"\n              >\n                <AlertTitle>Ошибка</AlertTitle>\n                {generalError}\n              </Alert>\n            )\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={isBusy}\n            onClick={close}\n          >\n            Отменить\n          </Button>\n\n          <BusiableButton\n            color=\"primary\"\n            disabled={isFormInvalid}\n            type=\"submit\"\n            busy={isBusy}\n          >\n            {submitButtonLabel}\n          </BusiableButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TaskManageDialog;\n","import { LOGIN } from '../constants/action-types';\n\nconst login = () => ({ type: LOGIN });\n\nexport default login;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport useDialog from '../hooks/use-dialog';\n\nimport BusiableButton from './busiable-button';\n\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport login from '../action-creators/login';\n\nimport { DIALOG_NAME, FIELD_EMPTY_ERROR } from '../constants/commons';\n\nconst LoginDialog = () => {\n  const validate = useCallback(\n    fieldValue => ({\n      ...(fieldValue.username !== undefined\n        && fieldValue.username.length === 0\n        && { username: FIELD_EMPTY_ERROR }),\n\n      ...(fieldValue.password !== undefined\n        && fieldValue.password.length === 0\n        && { password: FIELD_EMPTY_ERROR }),\n    }),\n    [],\n  );\n\n  const {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  } = useDialog(DIALOG_NAME.LOGIN, validate);\n\n  const usernameFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldValue.username);\n  const passwordFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldValue.password);\n\n  const usernameFieldError = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldError.username);\n  const passwordFieldError = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldError.password);\n\n  const isUsernameFieldInvalid = !!usernameFieldError;\n  const isPasswordFieldInvalid = !!passwordFieldError;\n\n  const isFormInvalid = isUsernameFieldInvalid || isPasswordFieldInvalid;\n\n  const dispatch = useDispatch();\n\n  const submitData = useCallback(\n    event => {\n      event.preventDefault();\n\n      dispatch(resetDialogGeneralError(DIALOG_NAME.LOGIN));\n\n      const fieldsError = validate({\n        username: usernameFieldValue,\n        password: passwordFieldValue,\n      });\n\n      dispatch(setDialogFieldError(DIALOG_NAME.LOGIN, fieldsError));\n\n      if (fieldsError.username || fieldsError.password) return;\n\n      dispatch(login());\n    },\n    [\n      validate,\n      usernameFieldValue,\n      passwordFieldValue,\n      dispatch,\n    ],\n  );\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={close}\n      onExited={resetState}\n    >\n      <DialogTitle>Вход</DialogTitle>\n\n      <form noValidate onSubmit={submitData}>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Пользователь\"\n            name=\"username\"\n            value={usernameFieldValue}\n            error={isUsernameFieldInvalid}\n            helperText={usernameFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            type=\"password\"\n            label=\"Пароль\"\n            name=\"password\"\n            value={passwordFieldValue}\n            error={isPasswordFieldInvalid}\n            helperText={passwordFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          {\n            generalError && (\n              <Alert\n                severity=\"error\"\n                variant=\"filled\"\n              >\n                <AlertTitle>Ошибка</AlertTitle>\n                {generalError}\n              </Alert>\n            )\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={isBusy}\n            onClick={close}\n          >\n            Отменить\n          </Button>\n\n          <BusiableButton\n            color=\"primary\"\n            disabled={isFormInvalid}\n            type=\"submit\"\n            busy={isBusy}\n          >\n            Войти\n          </BusiableButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default LoginDialog;\n","import { READ_AUTHORIZATION_DATA } from '../constants/action-types';\n\nconst readAuthorizationData = () => ({\n  type: READ_AUTHORIZATION_DATA,\n});\n\nexport default readAuthorizationData;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AppLoadingIndicator from './components/app-loading-indicator';\nimport Header from './components/header';\nimport AlertList from './components/alert-list';\nimport MainToolbar from './components/main-toolbar';\nimport TaskList from './components/task-list';\nimport TaskPagination from './components/task-pagination';\nimport TaskManageDialog from './components/task-manage-dialog';\nimport LoginDialog from './components/login-dialog';\n\nimport readAuthorizationData from './action-creators/read-authorization-data';\nimport fetchTasks from './action-creators/fetch-tasks';\n\nconst App = () => {\n  const isInitialDataLoaded = useSelector(state => state.taskListState.isInitialDataLoaded);\n\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(readAuthorizationData());\n      dispatch(fetchTasks({ currentPage: 1 }, true));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      {\n        !isInitialDataLoaded && (\n          <AppLoadingIndicator/>\n        )\n      }\n\n      {\n        isInitialDataLoaded && (\n          <>\n            <Header/>\n\n            <AlertList/>\n\n            <MainToolbar/>\n\n            <TaskList/>\n\n            <TaskPagination/>\n\n            <TaskManageDialog/>\n\n            <LoginDialog/>\n          </>\n        )\n      }\n    </>\n  );\n};\n\nexport default App;\n","import { SET_TASKS } from '../constants/action-types';\n\nconst defaultState = [];\n\nconst tasksReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_TASKS:\n      return [...payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","import { ADD_ERROR, REMOVE_ERROR } from '../constants/action-types';\n\nconst defaultState = [];\n\nconst errorsReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case ADD_ERROR:\n      return [...state, {\n        id: Date.now().toString(36) + Math.random().toString(36).substr(2),\n        text: payload,\n      }];\n\n    case REMOVE_ERROR:\n      return state.filter(error => error.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default errorsReducer;\n","import { SET_TASK_LIST_STATE } from '../constants/action-types';\nimport { TASK_SORTING_DIRECTION, TASK_SORTING_FIELD } from '../constants/commons';\n\nconst defaultState = {\n  isInitialDataLoaded: false,\n  pagesTotal: 0,\n  currentPage: 1,\n  sortingField: TASK_SORTING_FIELD.NO_SORTING,\n  sortingDirection: TASK_SORTING_DIRECTION.ASC,\n};\n\nconst taskListStateReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_TASK_LIST_STATE:\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskListStateReducer;\n","import {\n  SET_DIALOG_OPEN,\n  SET_DIALOG_BUSY,\n  SET_DIALOG_FIELD_VALUE,\n  SET_DIALOG_FIELD_ERROR,\n  RESET_DIALOG_FIELD_ERROR,\n  RESET_DIALOG_STATE,\n  SET_DIALOG_GENERAL_ERROR,\n  RESET_DIALOG_GENERAL_ERROR,\n} from '../constants/action-types';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst defaultState = {\n  [DIALOG_NAME.TASK_MANAGE]: {\n    fieldValue: {\n      id: null,\n      username: '',\n      email: '',\n      text: '',\n      oldText: null,\n      isEdited: false,\n      isDone: false,\n    },\n\n    fieldError: {\n      username: null,\n      email: null,\n      text: null,\n    },\n\n    generalError: null,\n    isOpen: false,\n    isBusy: false,\n  },\n\n  [DIALOG_NAME.LOGIN]: {\n    fieldValue: {\n      username: '',\n      password: '',\n    },\n\n    fieldError: {\n      username: null,\n      password: null,\n    },\n\n    generalError: null,\n    isOpen: false,\n    isBusy: false,\n  },\n};\n\nconst dialogStateReducer = (state = defaultState, { type, dialogName, payload }) => {\n  switch (type) {\n    case SET_DIALOG_OPEN:\n      return { ...state, [dialogName]: { ...state[dialogName], isOpen: payload } };\n\n    case SET_DIALOG_BUSY:\n      return { ...state, [dialogName]: { ...state[dialogName], isBusy: payload } };\n\n    case SET_DIALOG_FIELD_VALUE:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldValue: {\n            ...state[dialogName].fieldValue,\n            ...payload,\n          },\n        },\n      };\n\n    case SET_DIALOG_FIELD_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldError: {\n            ...state[dialogName].fieldError,\n            ...payload,\n          },\n        },\n      };\n\n    case RESET_DIALOG_FIELD_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldError: {\n            ...state[dialogName].fieldError,\n            [payload]: defaultState[dialogName].fieldError[payload],\n          },\n        },\n      };\n\n    case RESET_DIALOG_STATE:\n      return { ...state, [dialogName]: defaultState[dialogName] };\n\n    case SET_DIALOG_GENERAL_ERROR:\n      return { ...state, [dialogName]: { ...state[dialogName], generalError: payload } };\n\n    case RESET_DIALOG_GENERAL_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          generalError: defaultState[dialogName].generalError,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogStateReducer;\n","import {\n  SET_AUTHORIZATION_STATE,\n  LOGOUT,\n} from '../constants/action-types';\n\nconst defaultState = {\n  isAuthorized: false,\n};\n\nconst authorizationStateReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_AUTHORIZATION_STATE:\n      return { ...payload };\n\n    case LOGOUT:\n      return defaultState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authorizationStateReducer;\n","import { combineReducers } from 'redux';\n\nimport tasksReducer from './tasks';\nimport errorsReducer from './errors';\nimport taskListStateReducer from './task-list-state';\nimport dialogStateReducer from './dialog-state';\nimport authorizationStateReducer from './authorization-state';\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n  errors: errorsReducer,\n  taskListState: taskListStateReducer,\n  dialogState: dialogStateReducer,\n  authorizationState: authorizationStateReducer,\n});\n\nexport default rootReducer;\n","import { ADD_ERROR } from '../constants/action-types';\n\nconst addError = text => ({\n  type: ADD_ERROR,\n  payload: text,\n});\n\nexport default addError;\n","import { SET_TASK_LIST_STATE } from '../constants/action-types';\n\nconst setTaskListState = state => ({\n  type: SET_TASK_LIST_STATE,\n  payload: state,\n});\n\nexport default setTaskListState;\n","import { SET_TASKS } from '../constants/action-types';\n\nconst setTasks = tasks => ({\n  type: SET_TASKS,\n  payload: tasks,\n});\n\nexport default setTasks;\n","import axios from 'axios';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport addError from '../action-creators/add-error';\nimport setTaskListState from '../action-creators/set-task-list-state';\nimport setTasks from '../action-creators/set-tasks';\n\nimport { FETCH_TASKS } from '../constants/action-types';\n\nimport {\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  TASK_SORTING_FIELD,\n  TASK_STATUS_MASK,\n  TASKS_PER_PAGE,\n} from '../constants/commons';\n\nfunction* fetchTasks({ params: { currentPage, sortingField, sortingDirection }, isInitialDataLoading }) {\n  try {\n    const { taskListState } = yield select();\n\n    const requestParams = {\n      ...taskListState,\n      ...(currentPage && { currentPage }),\n      ...(sortingField && { sortingField }),\n      ...(sortingDirection && { sortingDirection }),\n    };\n\n    const currentPageParam = requestParams.currentPage ? `&page=${requestParams.currentPage}` : '';\n\n    const sortingFieldParam = requestParams.sortingField !== TASK_SORTING_FIELD.NO_SORTING\n      ? `&sort_field=${requestParams.sortingField}`\n      : '';\n\n    const sortingDirectionParam = requestParams.sortingField !== TASK_SORTING_FIELD.NO_SORTING\n      ? `&sort_direction=${requestParams.sortingDirection}`\n      : '';\n\n    const {\n      data: {\n        message,\n        status: requestStatus,\n      },\n    } = yield call(\n      axios.get,\n      `${BACKEND_URL}?developer=${DEVELOPER_NAME}${currentPageParam}${sortingFieldParam}${sortingDirectionParam}`,\n    );\n\n    switch (requestStatus) {\n      case BACKEND_STATUS.OK: {\n        yield put(setTaskListState({\n          pagesTotal: Math.ceil(message.total_task_count / TASKS_PER_PAGE),\n          ...(currentPage && { currentPage }),\n          ...(sortingField && { sortingField }),\n          ...(sortingDirection && { sortingDirection }),\n        }));\n\n        yield put(setTasks(message.tasks.map(({ status: taskStatus, ...rest }) => {\n          const binaryStatus = parseInt(taskStatus, 2);\n\n          /* eslint-disable no-bitwise */\n\n          const isEdited = !!(binaryStatus & TASK_STATUS_MASK.EDITED);\n          const isDone = !!(binaryStatus & TASK_STATUS_MASK.DONE);\n\n          /* eslint-enable no-bitwise */\n\n          return { ...rest, isEdited, isDone };\n        })));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(addError(message));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(addError('При загрузке задач что-то пошло не так.'));\n  }\n\n  if (isInitialDataLoading) yield put(setTaskListState({ isInitialDataLoaded: true }));\n}\n\nfunction* fetchTasksSaga() {\n  yield takeEvery(FETCH_TASKS, fetchTasks);\n}\n\nexport default fetchTasksSaga;\n","import { SET_DIALOG_BUSY } from '../constants/action-types';\n\nconst setDialogBusy = (dialogName, isBusy) => ({\n  type: SET_DIALOG_BUSY,\n  dialogName,\n  payload: isBusy,\n});\n\nexport default setDialogBusy;\n","import { SET_DIALOG_GENERAL_ERROR } from '../constants/action-types';\n\nconst setDialogGeneralError = (dialogName, generalError) => ({\n  type: SET_DIALOG_GENERAL_ERROR,\n  dialogName,\n  payload: generalError,\n});\n\nexport default setDialogGeneralError;\n","import axios from 'axios';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\n\nimport { CREATE_TASK } from '../constants/action-types';\n\nimport {\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n} from '../constants/commons';\n\nfunction* createTask() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, true));\n\n    const { dialogState: { [DIALOG_NAME.TASK_MANAGE]: { fieldValue: { username, email, text } } } } = yield select();\n\n    const formData = new FormData();\n\n    formData.append('username', username);\n    formData.append('email', email);\n    formData.append('text', text);\n\n    const { data: { message, status } } = yield call(\n      axios.post,\n      `${BACKEND_URL}create?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (status) {\n      case BACKEND_STATUS.OK: {\n        yield put(fetchTasks());\n        yield put(setDialogOpen(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, message));\n        yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, 'При создании задачи что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n  }\n}\n\nfunction* createTaskSaga() {\n  yield takeEvery(CREATE_TASK, createTask);\n}\n\nexport default createTaskSaga;\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\nimport readAuthorizationData from '../action-creators/read-authorization-data';\n\nimport { LOGIN } from '../constants/action-types';\n\nimport {\n  AUTHORIZATION_COOKIE_NAME,\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n} from '../constants/commons';\n\nfunction* login() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.LOGIN, true));\n\n    const { dialogState: { [DIALOG_NAME.LOGIN]: { fieldValue: { username, password } } } } = yield select();\n\n    const formData = new FormData();\n\n    formData.append('username', username);\n    formData.append('password', password);\n\n    const { data: { message, status } } = yield call(\n      axios.post,\n      `${BACKEND_URL}login?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (status) {\n      case BACKEND_STATUS.OK: {\n        const tokenExpires = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n\n        yield call(\n          Cookies.set,\n          AUTHORIZATION_COOKIE_NAME.TOKEN,\n          message.token,\n          {\n            expires: tokenExpires,\n            sameSite: 'strict',\n          },\n        );\n\n        yield call(\n          Cookies.set,\n          AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES,\n          tokenExpires,\n          {\n            expires: tokenExpires,\n            sameSite: 'strict',\n          },\n        );\n\n        yield put(readAuthorizationData());\n        yield put(setDialogOpen(DIALOG_NAME.LOGIN, false));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(setDialogFieldError(DIALOG_NAME.LOGIN, message));\n        yield put(setDialogBusy(DIALOG_NAME.LOGIN, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.LOGIN, 'При входе что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.LOGIN, false));\n  }\n}\n\nfunction* loginSaga() {\n  yield takeEvery(LOGIN, login);\n}\n\nexport default loginSaga;\n","import { call, takeEvery } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\n\nimport { LOGOUT } from '../constants/action-types';\nimport { AUTHORIZATION_COOKIE_NAME } from '../constants/commons';\n\nfunction* logout() {\n  yield call(Cookies.remove, AUTHORIZATION_COOKIE_NAME.TOKEN);\n  yield call(Cookies.remove, AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES);\n}\n\nfunction* logoutSaga() {\n  yield takeEvery(LOGOUT, logout);\n}\n\nexport default logoutSaga;\n","import { SET_AUTHORIZATION_STATE } from '../constants/action-types';\n\nconst setAuthorizationState = state => ({\n  type: SET_AUTHORIZATION_STATE,\n  payload: state,\n});\n\nexport default setAuthorizationState;\n","import { call, delay, put, takeLatest } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\n\nimport setAuthorizationState from '../action-creators/set-authorization-state';\nimport logout from '../action-creators/logout';\n\nimport { READ_AUTHORIZATION_DATA } from '../constants/action-types';\nimport { AUTHORIZATION_COOKIE_NAME } from '../constants/commons';\n\nconst getTimeout = dateString => new Date(dateString).getTime() - new Date().getTime();\n\nfunction* readAuthorizationData() {\n  const token = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN);\n\n  if (!token) return;\n\n  const tokenExpires = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES);\n\n  yield put(setAuthorizationState({ isAuthorized: true }));\n\n  const timeout = yield call(getTimeout, tokenExpires);\n\n  yield delay(timeout);\n\n  yield put(logout());\n}\n\nfunction* readAuthorizationDataSaga() {\n  yield takeLatest(READ_AUTHORIZATION_DATA, readAuthorizationData);\n}\n\nexport default readAuthorizationDataSaga;\n","import { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\nimport logout from '../action-creators/logout';\n\nimport { EDIT_TASK } from '../constants/action-types';\n\nimport {\n  AUTHORIZATION_COOKIE_NAME,\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n  TASK_STATUS_MASK,\n} from '../constants/commons';\n\nfunction* editTask() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, true));\n\n    const token = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN);\n\n    if (!token) {\n      yield put(logout());\n\n      yield put(setDialogGeneralError(\n        DIALOG_NAME.TASK_MANAGE,\n        'У вас нет прав на редактирование задачи. Войдите в систему и повторите попытку.',\n      ));\n\n      yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n      return;\n    }\n\n    const {\n      dialogState: {\n        [DIALOG_NAME.TASK_MANAGE]: {\n          fieldValue: { id, text, oldText, isEdited, isDone },\n        },\n      },\n    } = yield select();\n\n    // eslint-disable-next-line no-bitwise\n    const binaryTaskStatus = (isDone && TASK_STATUS_MASK.DONE)\n      ^ ((isEdited || text !== oldText) && TASK_STATUS_MASK.EDITED);\n\n    const status = parseInt(binaryTaskStatus.toString(2), 10);\n\n    const formData = new FormData();\n\n    formData.append('text', text);\n    formData.append('status', status);\n    formData.append('token', token);\n\n    const { data: { message, status: responseStatus } } = yield call(\n      axios.post,\n      `${BACKEND_URL}edit/${id}?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (responseStatus) {\n      case BACKEND_STATUS.OK: {\n        yield put(fetchTasks());\n        yield put(setDialogOpen(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        const { token: tokenError, ...rest } = message;\n\n        if (tokenError) yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, tokenError));\n\n        yield put(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, rest));\n        yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, 'При сохранении задачи что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n  }\n}\n\nfunction* editTaskSaga() {\n  yield takeEvery(EDIT_TASK, editTask);\n}\n\nexport default editTaskSaga;\n","import { all } from 'redux-saga/effects';\n\nimport fetchTasksSaga from './fetch-tasks';\nimport createTaskSaga from './create-task';\nimport loginSaga from './login';\nimport logoutSaga from './logout';\nimport readAuthorizationDataSaga from './read-authorization-data';\nimport editTaskSaga from './edit-task';\n\nfunction* rootSaga() {\n  yield all([\n    fetchTasksSaga(),\n    createTaskSaga(),\n    loginSaga(),\n    logoutSaga(),\n    readAuthorizationDataSaga(),\n    editTaskSaga(),\n  ]);\n}\n\nexport default rootSaga;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { CssBaseline } from '@material-ui/core';\n\nimport App from './app';\n\nimport store from './store';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <CssBaseline/>\n\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}