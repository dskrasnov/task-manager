{"version":3,"sources":["hooks/use-styles.js","components/app-loading-indicator.jsx","constants/action-types.js","action-creators/logout.js","action-creators/set-dialog-open.js","constants/commons.js","components/header.jsx","components/error-alert.jsx","action-creators/remove-error.js","components/alert-list.jsx","action-creators/fetch-tasks.js","components/main-toolbar.jsx","action-creators/set-dialog-field-value.js","components/task-card.jsx","components/task-list.jsx","components/task-pagination.jsx","action-creators/hide-notification.js","components/notification.jsx","action-creators/reset-dialog-state.js","action-creators/set-dialog-field-error.js","action-creators/reset-dialog-general-error.js","action-creators/reset-dialog-field-error.js","hooks/use-dialog.js","components/busiable-button.jsx","action-creators/create-task.js","action-creators/edit-task.js","components/task-manage-dialog.jsx","action-creators/login.js","components/login-dialog.jsx","action-creators/read-authorization-data.js","app.jsx","reducers/tasks.js","reducers/errors.js","reducers/notification.js","reducers/task-list-state.js","reducers/dialog-state.js","reducers/authorization-state.js","reducers/index.js","action-creators/add-error.js","action-creators/set-task-list-state.js","action-creators/set-tasks.js","sagas/fetch-tasks.js","action-creators/set-dialog-busy.js","action-creators/set-dialog-general-error.js","action-creators/show-notification.js","sagas/create-task.js","sagas/login.js","sagas/logout.js","action-creators/set-authorization-state.js","sagas/read-authorization-data.js","sagas/edit-task.js","sagas/index.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","gridAndWrapper","paddingLeft","spacing","paddingRight","alertList","paddingTop","taskPagination","paddingBottom","appLoadingIndicator","zIndex","drawer","color","buttonLoadingIndicator","position","top","left","marginTop","marginLeft","AppLoadingIndicator","classes","Backdrop","open","className","CircularProgress","FETCH_TASKS","SET_TASKS","CREATE_TASK","EDIT_TASK","ADD_ERROR","REMOVE_ERROR","SET_TASK_LIST_STATE","SET_AUTHORIZATION_STATE","SET_DIALOG_OPEN","SET_DIALOG_BUSY","SET_DIALOG_FIELD_VALUE","SET_DIALOG_FIELD_ERROR","RESET_DIALOG_FIELD_ERROR","SET_DIALOG_GENERAL_ERROR","RESET_DIALOG_GENERAL_ERROR","RESET_DIALOG_STATE","LOGIN","LOGOUT","READ_AUTHORIZATION_DATA","SHOW_NOTIFICATION","HIDE_NOTIFICATION","logout","type","setDialogOpen","dialogName","isOpen","payload","BACKEND_URL","DEVELOPER_NAME","BACKEND_STATUS","TASK_SORTING_FIELD","TASK_SORTING_DIRECTION","FIELD_EMPTY_ERROR","TASK_STATUS_MASK","DIALOG_NAME","AUTHORIZATION_COOKIE_NAME","NOTIFICATION_TYPE","Header","isAuthorized","useSelector","state","authorizationState","buttonLabel","dispatch","useDispatch","logoutOrOpenLoginDialog","useCallback","AppBar","Toolbar","Typography","variant","style","flexGrow","Button","onClick","ErrorAlert","error","id","text","onClose","Alert","severity","closeText","AlertTitle","removeError","errorId","AlertList","closeErrorAlert","errors","length","Grid","container","direction","map","item","fetchTasks","params","isInitialDataLoading","TASK_SORTING_MODES","field","label","MainToolbar","sortingField","taskListState","sortingDirection","isSortingDirectionButtonShown","isSortingDirectionAsc","sortingDirectionLabel","openCreateTaskDialog","changeSortingField","value","target","toggleSortingDirection","justify","alignItems","wrap","zeroMinWidth","Select","maxWidth","onChange","sortingMode","MenuItem","Tooltip","title","IconButton","setDialogFieldValue","fieldValue","TaskCard","username","email","isEdited","isDone","openEditTaskDialog","oldText","Card","Box","right","fontSize","CardContent","component","paragraph","noWrap","CardActions","size","TaskList","tasks","task","xs","md","align","TaskPagination","pagesTotal","currentPage","Pagination","shape","count","page","event","hideNotification","Notification","notification","close","reason","Snackbar","autoHideDuration","elevation","resetDialogState","setDialogFieldError","fieldError","resetDialogGeneralError","resetDialogFieldError","fieldName","useDialog","validate","dialogState","isBusy","generalError","resetState","changeField","name","validateField","BusiableButton","busy","children","disabled","rest","buttonDisabled","createTask","editTask","TaskManageDialog","undefined","test","isEditing","dialogTitleText","submitButtonLabel","usernameFieldValue","emailFieldValue","textFieldValue","usernameFieldError","emailFieldError","textFieldError","isUsernameFieldInvalid","isEmailFieldInvalid","isTextFieldInvalid","isFormInvalid","isUneditableFieldDisabled","changeIsDone","checked","submitData","preventDefault","fieldsError","Dialog","onExited","DialogTitle","noValidate","onSubmit","DialogContent","TextField","required","fullWidth","margin","helperText","onBlur","multiline","rows","FormControlLabel","control","Checkbox","DialogActions","login","LoginDialog","password","passwordFieldValue","passwordFieldError","isPasswordFieldInvalid","readAuthorizationData","App","isInitialDataLoaded","useEffect","defaultState","tasksReducer","errorsReducer","Date","now","toString","Math","random","substr","filter","notificationReducer","notificationType","taskListStateReducer","dialogStateReducer","authorizationStateReducer","rootReducer","combineReducers","addError","setTaskListState","setTasks","fetchTasksSaga","select","requestParams","currentPageParam","sortingFieldParam","sortingDirectionParam","call","axios","get","data","message","requestStatus","status","put","ceil","total_task_count","taskStatus","binaryStatus","parseInt","takeEvery","setDialogBusy","setDialogGeneralError","showNotification","createTaskSaga","formData","FormData","append","post","loginSaga","tokenExpires","getTime","Cookies","set","token","expires","sameSite","logoutSaga","remove","setAuthorizationState","readAuthorizationDataSaga","getTimeout","dateString","timeout","delay","takeLatest","editTaskSaga","responseStatus","tokenError","rootSaga","all","composeEnhancers","composeWithDevTools","trace","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.901ef1bc.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  gridAndWrapper: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  alertList: {\n    paddingTop: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  taskPagination: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  appLoadingIndicator: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  buttonLoadingIndicator: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -10,\n    marginLeft: -10,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nconst AppLoadingIndicator = () => {\n  const classes = useStyles();\n\n  return (\n    <Backdrop open className={classes.appLoadingIndicator}>\n      <CircularProgress color=\"inherit\"/>\n    </Backdrop>\n  );\n};\n\nexport default AppLoadingIndicator;\n","export const FETCH_TASKS = 'FETCH_TASKS';\nexport const SET_TASKS = 'SET_TASKS';\n\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const EDIT_TASK = 'EDIT_TASK';\n\nexport const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n\nexport const SET_TASK_LIST_STATE = 'SET_TASK_LIST_STATE';\n\nexport const SET_AUTHORIZATION_STATE = 'SET_AUTHORIZATION_STATE';\n\nexport const SET_DIALOG_OPEN = 'SET_DIALOG_OPEN';\nexport const SET_DIALOG_BUSY = 'SET_DIALOG_BUSY';\n\nexport const SET_DIALOG_FIELD_VALUE = 'SET_DIALOG_FIELD_VALUE';\n\nexport const SET_DIALOG_FIELD_ERROR = 'SET_DIALOG_FIELD_ERROR';\nexport const RESET_DIALOG_FIELD_ERROR = 'RESET_DIALOG_FIELD_ERROR';\n\nexport const SET_DIALOG_GENERAL_ERROR = 'SET_DIALOG_GENERAL_ERROR';\nexport const RESET_DIALOG_GENERAL_ERROR = 'RESET_DIALOG_GENERAL_ERROR';\n\nexport const RESET_DIALOG_STATE = 'RESET_DIALOG_STATE';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport const READ_AUTHORIZATION_DATA = 'READ_AUTHORIZATION_DATA';\n\nexport const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\n","import { LOGOUT } from '../constants/action-types';\n\nconst logout = () => ({\n  type: LOGOUT,\n});\n\nexport default logout;\n","import { SET_DIALOG_OPEN } from '../constants/action-types';\n\nconst setDialogOpen = (dialogName, isOpen) => ({\n  type: SET_DIALOG_OPEN,\n  dialogName,\n  payload: isOpen,\n});\n\nexport default setDialogOpen;\n","export const BACKEND_URL = 'https://uxcandy.com/~shapoval/test-task-backend/v2/';\nexport const DEVELOPER_NAME = 'dskrasnov';\n\nexport const BACKEND_STATUS = {\n  OK: 'ok',\n  ERROR: 'error',\n};\n\nexport const TASKS_PER_PAGE = 3;\n\nexport const TASK_SORTING_FIELD = {\n  NO_SORTING: 'NO_SORTING',\n  ID: 'id',\n  USERNAME: 'username',\n  EMAIL: 'email',\n  STATUS: 'status',\n};\n\nexport const TASK_SORTING_DIRECTION = {\n  ASC: 'asc',\n  DESC: 'desc',\n};\n\nexport const FIELD_EMPTY_ERROR = 'Поле не может быть пустым';\n\nexport const TASK_STATUS_MASK = {\n  EDITED: 0b01,\n  DONE: 0b10,\n};\n\nexport const DIALOG_NAME = {\n  TASK_MANAGE: 'taskManage',\n  LOGIN: 'login',\n};\n\nexport const AUTHORIZATION_COOKIE_NAME = {\n  TOKEN: 'token',\n  TOKEN_EXPIRES: 'tokenExpires',\n};\n\nexport const NOTIFICATION_TYPE = {\n  SUCCESS: 'success',\n  INFO: 'info',\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\n\nimport logout from '../action-creators/logout';\nimport setDialogOpen from '../action-creators/set-dialog-open';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst Header = () => {\n  const isAuthorized = useSelector(state => state.authorizationState.isAuthorized);\n\n  const buttonLabel = isAuthorized ? 'Выйти' : 'Войти';\n\n  const dispatch = useDispatch();\n\n  const logoutOrOpenLoginDialog = useCallback(\n    () => {\n      if (isAuthorized) {\n        dispatch(logout());\n\n        return;\n      }\n\n      dispatch(setDialogOpen(DIALOG_NAME.LOGIN, true));\n    },\n    [isAuthorized, dispatch],\n  );\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">Задачи</Typography>\n        <div style={{ flexGrow: 1 }}/>\n        <Button color=\"inherit\" onClick={logoutOrOpenLoginDialog}>{buttonLabel}</Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst ErrorAlert = ({ error: { id, text }, onClose }) => {\n  const closeHandler = () => onClose(id);\n\n  return (\n    <Alert\n      severity=\"error\"\n      variant=\"filled\"\n      closeText=\"Закрыть\"\n      // eslint-disable-next-line react/jsx-no-bind\n      onClose={closeHandler}\n    >\n      <AlertTitle>Ошибка</AlertTitle>\n      {text}\n    </Alert>\n  );\n};\n\nErrorAlert.propTypes = {\n  error: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }).isRequired,\n  onClose: PropTypes.func,\n};\n\nexport default ErrorAlert;\n","import { REMOVE_ERROR } from '../constants/action-types';\n\nconst removeError = errorId => ({\n  type: REMOVE_ERROR,\n  payload: errorId,\n});\n\nexport default removeError;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nimport ErrorAlert from './error-alert';\n\nimport removeError from '../action-creators/remove-error';\n\nconst AlertList = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const closeErrorAlert = useCallback(id => dispatch(removeError(id)), [dispatch]);\n\n  const errors = useSelector(state => state.errors);\n  if (!errors.length) return null;\n\n  return (\n    <div className={classes.alertList}>\n      <Grid container direction=\"column\" spacing={1} className={classes.gridAndWrapper}>\n        {\n          errors.map(error => (\n            <Grid key={error.id} item>\n              <ErrorAlert error={error} onClose={closeErrorAlert}/>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </div>\n  );\n};\n\nexport default AlertList;\n","import { FETCH_TASKS } from '../constants/action-types';\n\nconst fetchTasks = (params = {}, isInitialDataLoading) => ({\n  type: FETCH_TASKS,\n  params,\n  isInitialDataLoading,\n});\n\nexport default fetchTasks;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button, Grid, IconButton, MenuItem, Select, Toolbar, Tooltip } from '@material-ui/core';\n\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\n\nimport {\n  DIALOG_NAME,\n  TASK_SORTING_DIRECTION,\n  TASK_SORTING_FIELD,\n} from '../constants/commons';\n\nconst TASK_SORTING_MODES = [\n  { field: TASK_SORTING_FIELD.NO_SORTING, label: 'Без сортировки' },\n  { field: TASK_SORTING_FIELD.ID, label: 'По идентификатору' },\n  { field: TASK_SORTING_FIELD.USERNAME, label: 'По имени пользователя' },\n  { field: TASK_SORTING_FIELD.EMAIL, label: 'По адресу электронной почты' },\n  { field: TASK_SORTING_FIELD.STATUS, label: 'По статусу' },\n];\n\nconst MainToolbar = () => {\n  const sortingField = useSelector(state => state.taskListState.sortingField);\n  const sortingDirection = useSelector(state => state.taskListState.sortingDirection);\n\n  const isSortingDirectionButtonShown = sortingField !== TASK_SORTING_FIELD.NO_SORTING;\n  const isSortingDirectionAsc = sortingDirection === TASK_SORTING_DIRECTION.ASC;\n\n  const sortingDirectionLabel = isSortingDirectionAsc ? 'По возрастанию' : 'По убыванию';\n\n  const dispatch = useDispatch();\n\n  const openCreateTaskDialog = useCallback(\n    () => dispatch(setDialogOpen(DIALOG_NAME.TASK_MANAGE, true)),\n    [dispatch],\n  );\n\n  const changeSortingField = useCallback(\n    ({ target: { value } }) => dispatch(fetchTasks(\n      { sortingField: value },\n    )),\n    [dispatch],\n  );\n\n  const toggleSortingDirection = useCallback(\n    () => dispatch(fetchTasks({\n      sortingDirection: isSortingDirectionAsc\n        ? TASK_SORTING_DIRECTION.DESC\n        : TASK_SORTING_DIRECTION.ASC,\n    })),\n    [dispatch, isSortingDirectionAsc],\n  );\n\n  return (\n    <Toolbar>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={openCreateTaskDialog}\n          >\n            Создать\n          </Button>\n        </Grid>\n\n        <Grid\n          item\n          zeroMinWidth\n          container\n          justify=\"flex-end\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n        >\n          <Grid item zeroMinWidth>\n            <Select\n              value={sortingField}\n              style={{ maxWidth: '100%' }}\n              onChange={changeSortingField}\n            >\n              {\n                TASK_SORTING_MODES.map(sortingMode => (\n                  <MenuItem\n                    key={sortingMode.field}\n                    value={sortingMode.field}\n                  >\n                    {sortingMode.label}\n                  </MenuItem>\n                ))\n              }\n            </Select>\n          </Grid>\n\n          {\n            isSortingDirectionButtonShown && (\n              <Grid item>\n                <Tooltip title={sortingDirectionLabel}>\n                  <IconButton onClick={toggleSortingDirection}>\n                    {\n                      isSortingDirectionAsc ? (<ArrowDownwardIcon/>) : (<ArrowUpwardIcon/>)\n                    }\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            )\n          }\n        </Grid>\n      </Grid>\n    </Toolbar>\n  );\n};\n\nexport default MainToolbar;\n","import { SET_DIALOG_FIELD_VALUE } from '../constants/action-types';\n\nconst setDialogFieldValue = (dialogName, fieldValue) => ({\n  type: SET_DIALOG_FIELD_VALUE,\n  dialogName,\n  payload: fieldValue,\n});\n\nexport default setDialogFieldValue;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckBox from '@material-ui/icons/CheckBox';\n\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst TaskCard = ({ id, username, email, text, isEdited, isDone }) => {\n  const isAuthorized = useSelector(state => state.authorizationState.isAuthorized);\n\n  const dispatch = useDispatch();\n\n  const openEditTaskDialog = useCallback(\n    () => {\n      dispatch(setDialogFieldValue(DIALOG_NAME.TASK_MANAGE, {\n        id,\n        username,\n        email,\n        text,\n        oldText: text,\n        isEdited,\n        isDone,\n      }));\n\n      dispatch(setDialogOpen(DIALOG_NAME.TASK_MANAGE, true));\n    },\n    [dispatch, id, username, email, text, isEdited, isDone],\n  );\n\n  return (\n    <Card style={{ position: 'relative' }}>\n      {\n        (isEdited || isDone) && (\n          <Box style={{ position: 'absolute', top: 2, right: 2 }}>\n            {\n              isEdited && (\n                <Tooltip title=\"Отредактирована\">\n                  <EditIcon fontSize=\"small\"/>\n                </Tooltip>\n              )\n            }\n\n            {\n              isDone && (\n                <Tooltip title=\"Выполнена\">\n                  <CheckBox fontSize=\"small\"/>\n                </Tooltip>\n              )\n            }\n          </Box>\n        )\n      }\n\n      <CardContent>\n        <Typography component=\"span\">\n          <b>Пользователь:</b>\n        </Typography>\n        <Typography paragraph noWrap>\n          {username}\n        </Typography>\n\n        <Typography component=\"span\">\n          <b>Электронная почта:</b>\n        </Typography>\n        <Typography paragraph noWrap>\n          {email}\n        </Typography>\n\n        <Typography component=\"span\">\n          <b>Текст задачи:</b>\n        </Typography>\n        <Typography paragraph>\n          {text}\n        </Typography>\n      </CardContent>\n\n      {\n        isAuthorized && (\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={openEditTaskDialog}>\n              Редактировать\n            </Button>\n          </CardActions>\n        )\n      }\n    </Card>\n  );\n};\n\nTaskCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  isEdited: PropTypes.bool.isRequired,\n  isDone: PropTypes.bool.isRequired,\n};\n\nexport default TaskCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nimport TaskCard from './task-card';\n\nimport { TASKS_PER_PAGE } from '../constants/commons';\n\nconst MD_GRID_SIZE = 12 / TASKS_PER_PAGE;\n\nconst TaskList = () => {\n  const classes = useStyles();\n\n  const tasks = useSelector(state => state.tasks);\n\n  return (\n    <div className={classes.gridAndWrapper}>\n      <Grid container spacing={2} className={classes.gridAndWrapper}>\n        {\n          tasks.length\n            ? tasks.map(task => (\n              <Grid key={task.id} item xs={12} md={MD_GRID_SIZE}>\n                <TaskCard\n                  id={task.id}\n                  username={task.username}\n                  email={task.email}\n                  text={task.text}\n                  isEdited={task.isEdited}\n                  isDone={task.isDone}\n                />\n              </Grid>\n            ))\n            : (\n              <Grid item xs={12}>\n                <Typography align=\"center\">Список задач пуст.</Typography>\n              </Grid>\n            )\n        }\n      </Grid>\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport useStyles from '../hooks/use-styles';\n\nimport fetchTasks from '../action-creators/fetch-tasks';\n\nconst TaskPagination = () => {\n  const classes = useStyles();\n\n  const pagesTotal = useSelector(state => state.taskListState.pagesTotal);\n  const currentPage = useSelector(state => state.taskListState.currentPage);\n\n  const dispatch = useDispatch();\n\n  if (pagesTotal < 2) return null;\n\n  const changePage = (event, value) => {\n    dispatch(fetchTasks({ currentPage: value }));\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justify=\"center\"\n      className={classes.taskPagination}\n    >\n      <Grid item>\n        <Pagination\n          variant=\"outlined\"\n          shape=\"rounded\"\n          count={pagesTotal}\n          page={currentPage}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={changePage}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TaskPagination;\n","import { HIDE_NOTIFICATION } from '../constants/action-types';\n\nconst hideNotification = () => ({\n  type: HIDE_NOTIFICATION,\n});\n\nexport default hideNotification;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport hideNotification from '../action-creators/hide-notification';\n\nconst Notification = () => {\n  const { isOpen, type, text } = useSelector(state => state.notification);\n\n  const dispatch = useDispatch();\n\n  const close = useCallback(\n    (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      dispatch(hideNotification());\n    },\n    [dispatch],\n  );\n\n  return (\n    <Snackbar open={isOpen} autoHideDuration={5000} onClose={close}>\n      <Alert severity={type} variant=\"filled\" elevation={4} onClose={close}>\n        {text}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import { RESET_DIALOG_STATE } from '../constants/action-types';\n\nconst resetDialogState = dialogName => ({\n  type: RESET_DIALOG_STATE,\n  dialogName,\n});\n\nexport default resetDialogState;\n","import { SET_DIALOG_FIELD_ERROR } from '../constants/action-types';\n\nconst setDialogFieldError = (dialogName, fieldError) => ({\n  type: SET_DIALOG_FIELD_ERROR,\n  dialogName,\n  payload: fieldError,\n});\n\nexport default setDialogFieldError;\n","import { RESET_DIALOG_GENERAL_ERROR } from '../constants/action-types';\n\nconst resetDialogGeneralError = dialogName => ({\n  type: RESET_DIALOG_GENERAL_ERROR,\n  dialogName,\n});\n\nexport default resetDialogGeneralError;\n","import { RESET_DIALOG_FIELD_ERROR } from '../constants/action-types';\n\nconst resetDialogFieldError = (dialogName, fieldName) => ({\n  type: RESET_DIALOG_FIELD_ERROR,\n  dialogName,\n  payload: fieldName,\n});\n\nexport default resetDialogFieldError;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useCallback } from 'react';\n\nimport resetDialogState from '../action-creators/reset-dialog-state';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport resetDialogFieldError from '../action-creators/reset-dialog-field-error';\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\n\nconst useDialog = (dialogName, validate) => {\n  const isOpen = useSelector(state => state.dialogState[dialogName].isOpen);\n  const isBusy = useSelector(state => state.dialogState[dialogName].isBusy);\n\n  const generalError = useSelector(state => state.dialogState[dialogName].generalError);\n\n  const dispatch = useDispatch();\n\n  const close = useCallback(\n    () => {\n      if (isBusy) return;\n\n      dispatch(setDialogOpen(dialogName, false));\n    },\n    [isBusy, dispatch, dialogName],\n  );\n\n  const resetState = useCallback(\n    () => dispatch(resetDialogState(dialogName)),\n    [dispatch, dialogName],\n  );\n\n  const changeField = useCallback(\n    ({ target: { name, value } }) => {\n      dispatch(resetDialogGeneralError(dialogName));\n      dispatch(resetDialogFieldError(dialogName, name));\n      dispatch(setDialogFieldValue(dialogName, { [name]: value }));\n    },\n    [dispatch, dialogName],\n  );\n\n  const validateField = useCallback(\n    event => {\n      const fieldError = validate({ [event.target.name]: event.target.value });\n\n      dispatch(setDialogFieldError(dialogName, fieldError));\n    },\n    [dialogName, dispatch, validate],\n  );\n\n  return {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  };\n};\n\nexport default useDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, CircularProgress } from '@material-ui/core';\n\nimport useStyles from '../hooks/use-styles';\n\nconst BusiableButton = ({ busy, children, color, disabled, ...rest }) => {\n  const classes = useStyles();\n\n  const buttonDisabled = disabled || busy;\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Button color={color} disabled={buttonDisabled} {...rest}>\n      {children}\n      {\n        busy && (\n          <CircularProgress\n            size={20}\n            color={color}\n            className={classes.buttonLoadingIndicator}\n          />\n        )\n      }\n    </Button>\n  );\n};\n\nBusiableButton.propTypes = {\n  busy: PropTypes.bool,\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n  disabled: PropTypes.bool,\n};\n\nexport default BusiableButton;\n","import { CREATE_TASK } from '../constants/action-types';\n\nconst createTask = () => ({ type: CREATE_TASK });\n\nexport default createTask;\n","import { EDIT_TASK } from '../constants/action-types';\n\nconst editTask = () => ({\n  type: EDIT_TASK,\n});\n\nexport default editTask;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  TextField,\n} from '@material-ui/core';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport useDialog from '../hooks/use-dialog';\n\nimport BusiableButton from './busiable-button';\n\nimport setDialogFieldValue from '../action-creators/set-dialog-field-value';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport resetDialogFieldError from '../action-creators/reset-dialog-field-error';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport createTask from '../action-creators/create-task';\nimport editTask from '../action-creators/edit-task';\n\nimport {\n  DIALOG_NAME,\n  FIELD_EMPTY_ERROR,\n} from '../constants/commons';\n\nconst TaskManageDialog = () => {\n  const validate = useCallback(\n    fieldValue => {\n      const EMAIL_REGEXP = /.+@.+\\..+/;\n\n      return ({\n        ...(fieldValue.username !== undefined\n          && fieldValue.username.length === 0\n          && { username: FIELD_EMPTY_ERROR }),\n\n        ...(fieldValue.text !== undefined\n          && fieldValue.text.length === 0\n          && { text: FIELD_EMPTY_ERROR }),\n\n        ...(fieldValue.email !== undefined\n          && !EMAIL_REGEXP.test(fieldValue.email)\n          && { email: 'Некорректный формат адреса' }),\n\n        ...(fieldValue.email !== undefined\n          && fieldValue.email.length === 0\n          && { email: FIELD_EMPTY_ERROR }),\n      });\n    },\n    [],\n  );\n\n  const {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  } = useDialog(DIALOG_NAME.TASK_MANAGE, validate);\n\n  const taskId = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.id);\n\n  const isEditing = !!taskId;\n\n  const dialogTitleText = isEditing ? 'Редактирование задачи' : 'Создание задачи';\n  const submitButtonLabel = isEditing ? 'Сохранить' : 'Создать';\n\n  const usernameFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.username);\n  const emailFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.email);\n  const textFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.text);\n\n  const isDone = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldValue.isDone);\n\n  const usernameFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.username);\n  const emailFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.email);\n  const textFieldError = useSelector(state => state.dialogState[DIALOG_NAME.TASK_MANAGE].fieldError.text);\n\n  const isUsernameFieldInvalid = !!usernameFieldError;\n  const isEmailFieldInvalid = !!emailFieldError;\n  const isTextFieldInvalid = !!textFieldError;\n\n  const isFormInvalid = isUsernameFieldInvalid || isEmailFieldInvalid || isTextFieldInvalid;\n\n  const isUneditableFieldDisabled = isBusy || isEditing;\n\n  const dispatch = useDispatch();\n\n  const changeIsDone = useCallback(\n    ({ target: { name, checked } }) => {\n      dispatch(resetDialogGeneralError(DIALOG_NAME.TASK_MANAGE));\n      dispatch(resetDialogFieldError(DIALOG_NAME.TASK_MANAGE, name));\n      dispatch(setDialogFieldValue(DIALOG_NAME.TASK_MANAGE, { [name]: checked }));\n    },\n    [dispatch],\n  );\n\n  const submitData = useCallback(\n    event => {\n      event.preventDefault();\n\n      dispatch(resetDialogGeneralError(DIALOG_NAME.TASK_MANAGE));\n\n      const fieldsError = validate({\n        ...(!isEditing && { username: usernameFieldValue }),\n        ...(!isEditing && { email: emailFieldValue }),\n        text: textFieldValue,\n      });\n\n      dispatch(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, fieldsError));\n\n      if (fieldsError.username || fieldsError.email || fieldsError.text) return;\n\n      const action = isEditing ? editTask : createTask;\n\n      dispatch(action());\n    },\n    [\n      dispatch,\n      validate,\n      isEditing,\n      usernameFieldValue,\n      emailFieldValue,\n      textFieldValue,\n    ],\n  );\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={close}\n      onExited={resetState}\n    >\n      <DialogTitle>{dialogTitleText}</DialogTitle>\n\n      <form noValidate onSubmit={submitData}>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Пользователь\"\n            name=\"username\"\n            value={usernameFieldValue}\n            error={isUsernameFieldInvalid}\n            helperText={usernameFieldError}\n            disabled={isUneditableFieldDisabled}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Электронная почта\"\n            name=\"email\"\n            value={emailFieldValue}\n            error={isEmailFieldInvalid}\n            helperText={emailFieldError}\n            disabled={isUneditableFieldDisabled}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            multiline\n            rows={4}\n            margin=\"normal\"\n            label=\"Текст задачи\"\n            name=\"text\"\n            value={textFieldValue}\n            error={isTextFieldInvalid}\n            helperText={textFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          {\n            isEditing && (\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    name=\"isDone\"\n                    checked={isDone}\n                    onChange={changeIsDone}\n                  />\n                )}\n                label=\"Задача выполнена\"\n              />\n            )\n          }\n\n          {\n            generalError && (\n              <Alert\n                severity=\"error\"\n                variant=\"filled\"\n              >\n                <AlertTitle>Ошибка</AlertTitle>\n                {generalError}\n              </Alert>\n            )\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={isBusy}\n            onClick={close}\n          >\n            Отменить\n          </Button>\n\n          <BusiableButton\n            color=\"primary\"\n            disabled={isFormInvalid}\n            type=\"submit\"\n            busy={isBusy}\n          >\n            {submitButtonLabel}\n          </BusiableButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TaskManageDialog;\n","import { LOGIN } from '../constants/action-types';\n\nconst login = () => ({ type: LOGIN });\n\nexport default login;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\n\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport useDialog from '../hooks/use-dialog';\n\nimport BusiableButton from './busiable-button';\n\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport resetDialogGeneralError from '../action-creators/reset-dialog-general-error';\nimport login from '../action-creators/login';\n\nimport { DIALOG_NAME, FIELD_EMPTY_ERROR } from '../constants/commons';\n\nconst LoginDialog = () => {\n  const validate = useCallback(\n    fieldValue => ({\n      ...(fieldValue.username !== undefined\n        && fieldValue.username.length === 0\n        && { username: FIELD_EMPTY_ERROR }),\n\n      ...(fieldValue.password !== undefined\n        && fieldValue.password.length === 0\n        && { password: FIELD_EMPTY_ERROR }),\n    }),\n    [],\n  );\n\n  const {\n    isOpen,\n    isBusy,\n    generalError,\n    close,\n    resetState,\n    changeField,\n    validateField,\n  } = useDialog(DIALOG_NAME.LOGIN, validate);\n\n  const usernameFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldValue.username);\n  const passwordFieldValue = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldValue.password);\n\n  const usernameFieldError = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldError.username);\n  const passwordFieldError = useSelector(state => state.dialogState[DIALOG_NAME.LOGIN].fieldError.password);\n\n  const isUsernameFieldInvalid = !!usernameFieldError;\n  const isPasswordFieldInvalid = !!passwordFieldError;\n\n  const isFormInvalid = isUsernameFieldInvalid || isPasswordFieldInvalid;\n\n  const dispatch = useDispatch();\n\n  const submitData = useCallback(\n    event => {\n      event.preventDefault();\n\n      dispatch(resetDialogGeneralError(DIALOG_NAME.LOGIN));\n\n      const fieldsError = validate({\n        username: usernameFieldValue,\n        password: passwordFieldValue,\n      });\n\n      dispatch(setDialogFieldError(DIALOG_NAME.LOGIN, fieldsError));\n\n      if (fieldsError.username || fieldsError.password) return;\n\n      dispatch(login());\n    },\n    [\n      validate,\n      usernameFieldValue,\n      passwordFieldValue,\n      dispatch,\n    ],\n  );\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={close}\n      onExited={resetState}\n    >\n      <DialogTitle>Вход</DialogTitle>\n\n      <form noValidate onSubmit={submitData}>\n        <DialogContent>\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            label=\"Пользователь\"\n            name=\"username\"\n            value={usernameFieldValue}\n            error={isUsernameFieldInvalid}\n            helperText={usernameFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          <TextField\n            required\n            fullWidth\n            margin=\"normal\"\n            type=\"password\"\n            label=\"Пароль\"\n            name=\"password\"\n            value={passwordFieldValue}\n            error={isPasswordFieldInvalid}\n            helperText={passwordFieldError}\n            disabled={isBusy}\n            onChange={changeField}\n            onBlur={validateField}\n          />\n\n          {\n            generalError && (\n              <Alert\n                severity=\"error\"\n                variant=\"filled\"\n              >\n                <AlertTitle>Ошибка</AlertTitle>\n                {generalError}\n              </Alert>\n            )\n          }\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={isBusy}\n            onClick={close}\n          >\n            Отменить\n          </Button>\n\n          <BusiableButton\n            color=\"primary\"\n            disabled={isFormInvalid}\n            type=\"submit\"\n            busy={isBusy}\n          >\n            Войти\n          </BusiableButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default LoginDialog;\n","import { READ_AUTHORIZATION_DATA } from '../constants/action-types';\n\nconst readAuthorizationData = () => ({\n  type: READ_AUTHORIZATION_DATA,\n});\n\nexport default readAuthorizationData;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AppLoadingIndicator from './components/app-loading-indicator';\nimport Header from './components/header';\nimport AlertList from './components/alert-list';\nimport MainToolbar from './components/main-toolbar';\nimport TaskList from './components/task-list';\nimport TaskPagination from './components/task-pagination';\nimport Notification from './components/notification';\nimport TaskManageDialog from './components/task-manage-dialog';\nimport LoginDialog from './components/login-dialog';\n\nimport readAuthorizationData from './action-creators/read-authorization-data';\nimport fetchTasks from './action-creators/fetch-tasks';\n\nconst App = () => {\n  const isInitialDataLoaded = useSelector(state => state.taskListState.isInitialDataLoaded);\n\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(readAuthorizationData());\n      dispatch(fetchTasks({ currentPage: 1 }, true));\n    },\n    [dispatch],\n  );\n\n  return (\n    <>\n      {\n        !isInitialDataLoaded && (\n          <AppLoadingIndicator/>\n        )\n      }\n\n      {\n        isInitialDataLoaded && (\n          <>\n            <Header/>\n\n            <AlertList/>\n\n            <MainToolbar/>\n\n            <TaskList/>\n\n            <TaskPagination/>\n\n            <Notification/>\n\n            <TaskManageDialog/>\n\n            <LoginDialog/>\n          </>\n        )\n      }\n    </>\n  );\n};\n\nexport default App;\n","import { SET_TASKS } from '../constants/action-types';\n\nconst defaultState = [];\n\nconst tasksReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_TASKS:\n      return [...payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","import { ADD_ERROR, REMOVE_ERROR } from '../constants/action-types';\n\nconst defaultState = [];\n\nconst errorsReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case ADD_ERROR:\n      return [...state, {\n        id: Date.now().toString(36) + Math.random().toString(36).substr(2),\n        text: payload,\n      }];\n\n    case REMOVE_ERROR:\n      return state.filter(error => error.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default errorsReducer;\n","import { SHOW_NOTIFICATION, HIDE_NOTIFICATION } from '../constants/action-types';\n\nconst defaultState = {\n  isOpen: false,\n  type: '',\n  text: '',\n};\n\nconst notificationReducer = (state = defaultState, { type, notificationType, text }) => {\n  switch (type) {\n    case SHOW_NOTIFICATION:\n      return { isOpen: true, type: notificationType, text };\n\n    case HIDE_NOTIFICATION:\n      return { ...state, isOpen: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;\n","import { SET_TASK_LIST_STATE } from '../constants/action-types';\nimport { TASK_SORTING_DIRECTION, TASK_SORTING_FIELD } from '../constants/commons';\n\nconst defaultState = {\n  isInitialDataLoaded: false,\n  pagesTotal: 0,\n  currentPage: 1,\n  sortingField: TASK_SORTING_FIELD.NO_SORTING,\n  sortingDirection: TASK_SORTING_DIRECTION.ASC,\n};\n\nconst taskListStateReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_TASK_LIST_STATE:\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default taskListStateReducer;\n","import {\n  SET_DIALOG_OPEN,\n  SET_DIALOG_BUSY,\n  SET_DIALOG_FIELD_VALUE,\n  SET_DIALOG_FIELD_ERROR,\n  RESET_DIALOG_FIELD_ERROR,\n  RESET_DIALOG_STATE,\n  SET_DIALOG_GENERAL_ERROR,\n  RESET_DIALOG_GENERAL_ERROR,\n} from '../constants/action-types';\n\nimport { DIALOG_NAME } from '../constants/commons';\n\nconst defaultState = {\n  [DIALOG_NAME.TASK_MANAGE]: {\n    fieldValue: {\n      id: null,\n      username: '',\n      email: '',\n      text: '',\n      oldText: null,\n      isEdited: false,\n      isDone: false,\n    },\n\n    fieldError: {\n      username: null,\n      email: null,\n      text: null,\n    },\n\n    generalError: null,\n    isOpen: false,\n    isBusy: false,\n  },\n\n  [DIALOG_NAME.LOGIN]: {\n    fieldValue: {\n      username: '',\n      password: '',\n    },\n\n    fieldError: {\n      username: null,\n      password: null,\n    },\n\n    generalError: null,\n    isOpen: false,\n    isBusy: false,\n  },\n};\n\nconst dialogStateReducer = (state = defaultState, { type, dialogName, payload }) => {\n  switch (type) {\n    case SET_DIALOG_OPEN:\n      return { ...state, [dialogName]: { ...state[dialogName], isOpen: payload } };\n\n    case SET_DIALOG_BUSY:\n      return { ...state, [dialogName]: { ...state[dialogName], isBusy: payload } };\n\n    case SET_DIALOG_FIELD_VALUE:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldValue: {\n            ...state[dialogName].fieldValue,\n            ...payload,\n          },\n        },\n      };\n\n    case SET_DIALOG_FIELD_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldError: {\n            ...state[dialogName].fieldError,\n            ...payload,\n          },\n        },\n      };\n\n    case RESET_DIALOG_FIELD_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          fieldError: {\n            ...state[dialogName].fieldError,\n            [payload]: defaultState[dialogName].fieldError[payload],\n          },\n        },\n      };\n\n    case RESET_DIALOG_STATE:\n      return { ...state, [dialogName]: defaultState[dialogName] };\n\n    case SET_DIALOG_GENERAL_ERROR:\n      return { ...state, [dialogName]: { ...state[dialogName], generalError: payload } };\n\n    case RESET_DIALOG_GENERAL_ERROR:\n      return {\n        ...state,\n        [dialogName]: {\n          ...state[dialogName],\n          generalError: defaultState[dialogName].generalError,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogStateReducer;\n","import {\n  SET_AUTHORIZATION_STATE,\n  LOGOUT,\n} from '../constants/action-types';\n\nconst defaultState = {\n  isAuthorized: false,\n};\n\nconst authorizationStateReducer = (state = defaultState, { type, payload }) => {\n  switch (type) {\n    case SET_AUTHORIZATION_STATE:\n      return { ...payload };\n\n    case LOGOUT:\n      return defaultState;\n\n    default:\n      return state;\n  }\n};\n\nexport default authorizationStateReducer;\n","import { combineReducers } from 'redux';\n\nimport tasksReducer from './tasks';\nimport errorsReducer from './errors';\nimport notificationReducer from './notification';\nimport taskListStateReducer from './task-list-state';\nimport dialogStateReducer from './dialog-state';\nimport authorizationStateReducer from './authorization-state';\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n  errors: errorsReducer,\n  notification: notificationReducer,\n  taskListState: taskListStateReducer,\n  dialogState: dialogStateReducer,\n  authorizationState: authorizationStateReducer,\n});\n\nexport default rootReducer;\n","import { ADD_ERROR } from '../constants/action-types';\n\nconst addError = text => ({\n  type: ADD_ERROR,\n  payload: text,\n});\n\nexport default addError;\n","import { SET_TASK_LIST_STATE } from '../constants/action-types';\n\nconst setTaskListState = state => ({\n  type: SET_TASK_LIST_STATE,\n  payload: state,\n});\n\nexport default setTaskListState;\n","import { SET_TASKS } from '../constants/action-types';\n\nconst setTasks = tasks => ({\n  type: SET_TASKS,\n  payload: tasks,\n});\n\nexport default setTasks;\n","import axios from 'axios';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport addError from '../action-creators/add-error';\nimport setTaskListState from '../action-creators/set-task-list-state';\nimport setTasks from '../action-creators/set-tasks';\n\nimport { FETCH_TASKS } from '../constants/action-types';\n\nimport {\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  TASK_SORTING_FIELD,\n  TASK_STATUS_MASK,\n  TASKS_PER_PAGE,\n} from '../constants/commons';\n\nfunction* fetchTasks({ params: { currentPage, sortingField, sortingDirection }, isInitialDataLoading }) {\n  try {\n    const { taskListState } = yield select();\n\n    const requestParams = {\n      ...taskListState,\n      ...(currentPage && { currentPage }),\n      ...(sortingField && { sortingField }),\n      ...(sortingDirection && { sortingDirection }),\n    };\n\n    const currentPageParam = requestParams.currentPage ? `&page=${requestParams.currentPage}` : '';\n\n    const sortingFieldParam = requestParams.sortingField !== TASK_SORTING_FIELD.NO_SORTING\n      ? `&sort_field=${requestParams.sortingField}`\n      : '';\n\n    const sortingDirectionParam = requestParams.sortingField !== TASK_SORTING_FIELD.NO_SORTING\n      ? `&sort_direction=${requestParams.sortingDirection}`\n      : '';\n\n    const {\n      data: {\n        message,\n        status: requestStatus,\n      },\n    } = yield call(\n      axios.get,\n      `${BACKEND_URL}?developer=${DEVELOPER_NAME}${currentPageParam}${sortingFieldParam}${sortingDirectionParam}`,\n    );\n\n    switch (requestStatus) {\n      case BACKEND_STATUS.OK: {\n        yield put(setTaskListState({\n          pagesTotal: Math.ceil(message.total_task_count / TASKS_PER_PAGE),\n          ...(currentPage && { currentPage }),\n          ...(sortingField && { sortingField }),\n          ...(sortingDirection && { sortingDirection }),\n        }));\n\n        yield put(setTasks(message.tasks.map(({ status: taskStatus, ...rest }) => {\n          const binaryStatus = parseInt(taskStatus, 2);\n\n          /* eslint-disable no-bitwise */\n\n          const isEdited = !!(binaryStatus & TASK_STATUS_MASK.EDITED);\n          const isDone = !!(binaryStatus & TASK_STATUS_MASK.DONE);\n\n          /* eslint-enable no-bitwise */\n\n          return { ...rest, isEdited, isDone };\n        })));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(addError(message));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(addError('При загрузке задач что-то пошло не так.'));\n  }\n\n  if (isInitialDataLoading) yield put(setTaskListState({ isInitialDataLoaded: true }));\n}\n\nfunction* fetchTasksSaga() {\n  yield takeEvery(FETCH_TASKS, fetchTasks);\n}\n\nexport default fetchTasksSaga;\n","import { SET_DIALOG_BUSY } from '../constants/action-types';\n\nconst setDialogBusy = (dialogName, isBusy) => ({\n  type: SET_DIALOG_BUSY,\n  dialogName,\n  payload: isBusy,\n});\n\nexport default setDialogBusy;\n","import { SET_DIALOG_GENERAL_ERROR } from '../constants/action-types';\n\nconst setDialogGeneralError = (dialogName, generalError) => ({\n  type: SET_DIALOG_GENERAL_ERROR,\n  dialogName,\n  payload: generalError,\n});\n\nexport default setDialogGeneralError;\n","import { SHOW_NOTIFICATION } from '../constants/action-types';\n\nconst showNotification = (notificationType, text) => ({\n  type: SHOW_NOTIFICATION,\n  notificationType,\n  text,\n});\n\nexport default showNotification;\n","import axios from 'axios';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\nimport showNotification from '../action-creators/show-notification';\n\nimport { CREATE_TASK } from '../constants/action-types';\n\nimport {\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n  NOTIFICATION_TYPE,\n} from '../constants/commons';\n\nfunction* createTask() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, true));\n\n    const { dialogState: { [DIALOG_NAME.TASK_MANAGE]: { fieldValue: { username, email, text } } } } = yield select();\n\n    const formData = new FormData();\n\n    formData.append('username', username);\n    formData.append('email', email);\n    formData.append('text', text);\n\n    const { data: { message, status } } = yield call(\n      axios.post,\n      `${BACKEND_URL}create?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (status) {\n      case BACKEND_STATUS.OK: {\n        yield put(fetchTasks());\n        yield put(setDialogOpen(DIALOG_NAME.TASK_MANAGE, false));\n        yield put(showNotification(NOTIFICATION_TYPE.SUCCESS, 'Задача успешно создана!'));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, message));\n        yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, 'При создании задачи что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n  }\n}\n\nfunction* createTaskSaga() {\n  yield takeEvery(CREATE_TASK, createTask);\n}\n\nexport default createTaskSaga;\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\nimport readAuthorizationData from '../action-creators/read-authorization-data';\nimport showNotification from '../action-creators/show-notification';\n\nimport { LOGIN } from '../constants/action-types';\n\nimport {\n  AUTHORIZATION_COOKIE_NAME,\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n  NOTIFICATION_TYPE,\n} from '../constants/commons';\n\nfunction* login() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.LOGIN, true));\n\n    const { dialogState: { [DIALOG_NAME.LOGIN]: { fieldValue: { username, password } } } } = yield select();\n\n    const formData = new FormData();\n\n    formData.append('username', username);\n    formData.append('password', password);\n\n    const { data: { message, status } } = yield call(\n      axios.post,\n      `${BACKEND_URL}login?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (status) {\n      case BACKEND_STATUS.OK: {\n        const tokenExpires = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\n\n        yield call(\n          Cookies.set,\n          AUTHORIZATION_COOKIE_NAME.TOKEN,\n          message.token,\n          {\n            expires: tokenExpires,\n            sameSite: 'strict',\n          },\n        );\n\n        yield call(\n          Cookies.set,\n          AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES,\n          tokenExpires,\n          {\n            expires: tokenExpires,\n            sameSite: 'strict',\n          },\n        );\n\n        yield put(readAuthorizationData());\n        yield put(setDialogOpen(DIALOG_NAME.LOGIN, false));\n        yield put(showNotification(NOTIFICATION_TYPE.INFO, 'Вы вошли в систему.'));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        yield put(setDialogFieldError(DIALOG_NAME.LOGIN, message));\n        yield put(setDialogBusy(DIALOG_NAME.LOGIN, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.LOGIN, 'При входе что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.LOGIN, false));\n  }\n}\n\nfunction* loginSaga() {\n  yield takeEvery(LOGIN, login);\n}\n\nexport default loginSaga;\n","import { call, put, takeEvery } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\n\nimport showNotification from '../action-creators/show-notification';\n\nimport { LOGOUT } from '../constants/action-types';\nimport { AUTHORIZATION_COOKIE_NAME, NOTIFICATION_TYPE } from '../constants/commons';\n\nfunction* logout() {\n  yield call(Cookies.remove, AUTHORIZATION_COOKIE_NAME.TOKEN);\n  yield call(Cookies.remove, AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES);\n\n  yield put(showNotification(NOTIFICATION_TYPE.INFO, 'Вы вышли из системы.'));\n}\n\nfunction* logoutSaga() {\n  yield takeEvery(LOGOUT, logout);\n}\n\nexport default logoutSaga;\n","import { SET_AUTHORIZATION_STATE } from '../constants/action-types';\n\nconst setAuthorizationState = state => ({\n  type: SET_AUTHORIZATION_STATE,\n  payload: state,\n});\n\nexport default setAuthorizationState;\n","import { call, delay, put, takeLatest } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\n\nimport setAuthorizationState from '../action-creators/set-authorization-state';\nimport logout from '../action-creators/logout';\n\nimport { READ_AUTHORIZATION_DATA } from '../constants/action-types';\nimport { AUTHORIZATION_COOKIE_NAME } from '../constants/commons';\n\nconst getTimeout = dateString => new Date(dateString).getTime() - new Date().getTime();\n\nfunction* readAuthorizationData() {\n  const token = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN);\n\n  if (!token) return;\n\n  const tokenExpires = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN_EXPIRES);\n\n  yield put(setAuthorizationState({ isAuthorized: true }));\n\n  const timeout = yield call(getTimeout, tokenExpires);\n\n  yield delay(timeout);\n\n  yield put(logout());\n}\n\nfunction* readAuthorizationDataSaga() {\n  yield takeLatest(READ_AUTHORIZATION_DATA, readAuthorizationData);\n}\n\nexport default readAuthorizationDataSaga;\n","import { call, put, takeEvery, select } from 'redux-saga/effects';\n\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nimport setDialogBusy from '../action-creators/set-dialog-busy';\nimport fetchTasks from '../action-creators/fetch-tasks';\nimport setDialogOpen from '../action-creators/set-dialog-open';\nimport setDialogFieldError from '../action-creators/set-dialog-field-error';\nimport setDialogGeneralError from '../action-creators/set-dialog-general-error';\nimport logout from '../action-creators/logout';\nimport showNotification from '../action-creators/show-notification';\n\nimport { EDIT_TASK } from '../constants/action-types';\n\nimport {\n  AUTHORIZATION_COOKIE_NAME,\n  BACKEND_STATUS,\n  BACKEND_URL,\n  DEVELOPER_NAME,\n  DIALOG_NAME,\n  NOTIFICATION_TYPE,\n  TASK_STATUS_MASK,\n} from '../constants/commons';\n\nfunction* editTask() {\n  try {\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, true));\n\n    const token = yield call(Cookies.get, AUTHORIZATION_COOKIE_NAME.TOKEN);\n\n    if (!token) {\n      yield put(logout());\n\n      yield put(setDialogGeneralError(\n        DIALOG_NAME.TASK_MANAGE,\n        'У вас нет прав на редактирование задачи. Войдите в систему и повторите попытку.',\n      ));\n\n      yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n      return;\n    }\n\n    const {\n      dialogState: {\n        [DIALOG_NAME.TASK_MANAGE]: {\n          fieldValue: { id, text, oldText, isEdited, isDone },\n        },\n      },\n    } = yield select();\n\n    // eslint-disable-next-line no-bitwise\n    const binaryTaskStatus = (isDone && TASK_STATUS_MASK.DONE)\n      ^ ((isEdited || text !== oldText) && TASK_STATUS_MASK.EDITED);\n\n    const status = parseInt(binaryTaskStatus.toString(2), 10);\n\n    const formData = new FormData();\n\n    formData.append('text', text);\n    formData.append('status', status);\n    formData.append('token', token);\n\n    const { data: { message, status: responseStatus } } = yield call(\n      axios.post,\n      `${BACKEND_URL}edit/${id}?developer=${DEVELOPER_NAME}`,\n      formData,\n    );\n\n    switch (responseStatus) {\n      case BACKEND_STATUS.OK: {\n        yield put(fetchTasks());\n        yield put(setDialogOpen(DIALOG_NAME.TASK_MANAGE, false));\n        yield put(showNotification(NOTIFICATION_TYPE.SUCCESS, 'Задача успешно сохранена!'));\n\n        break;\n      }\n\n      case BACKEND_STATUS.ERROR: {\n        const { token: tokenError, ...rest } = message;\n\n        if (tokenError) yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, tokenError));\n\n        yield put(setDialogFieldError(DIALOG_NAME.TASK_MANAGE, rest));\n        yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n\n        break;\n      }\n\n      default:\n        // no default\n    }\n  } catch (error) {\n    yield put(setDialogGeneralError(DIALOG_NAME.TASK_MANAGE, 'При сохранении задачи что-то пошло не так.'));\n    yield put(setDialogBusy(DIALOG_NAME.TASK_MANAGE, false));\n  }\n}\n\nfunction* editTaskSaga() {\n  yield takeEvery(EDIT_TASK, editTask);\n}\n\nexport default editTaskSaga;\n","import { all } from 'redux-saga/effects';\n\nimport fetchTasksSaga from './fetch-tasks';\nimport createTaskSaga from './create-task';\nimport loginSaga from './login';\nimport logoutSaga from './logout';\nimport readAuthorizationDataSaga from './read-authorization-data';\nimport editTaskSaga from './edit-task';\n\nfunction* rootSaga() {\n  yield all([\n    fetchTasksSaga(),\n    createTaskSaga(),\n    loginSaga(),\n    logoutSaga(),\n    readAuthorizationDataSaga(),\n    editTaskSaga(),\n  ]);\n}\n\nexport default rootSaga;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { CssBaseline } from '@material-ui/core';\n\nimport App from './app';\n\nimport store from './store';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <CssBaseline/>\n\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}